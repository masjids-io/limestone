{
  "swagger": "2.0",
  "info": {
    "title": "masjid_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MasjidService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/masjids": {
      "get": {
        "summary": "Returns a paginated list of masjids from the database.",
        "operationId": "MasjidService_ListMasjids",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/limestoneListMasjidsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of masjids to return. Fewer masjids might be returned.\nDefault value is 25.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token from a previous `ListMasjids` call. If this is provided, then the \nnext page will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MasjidService"
        ]
      },
      "post": {
        "summary": "Creates a masjid in the database.",
        "operationId": "MasjidService_CreateMasjid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/limestoneMasjid"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "masjid",
            "description": "The masjid to create in the database.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/limestoneMasjid",
              "required": [
                "masjid"
              ]
            }
          }
        ],
        "tags": [
          "MasjidService"
        ]
      }
    },
    "/v1/{id}": {
      "get": {
        "summary": "Gets a masjid from the database with the given id.",
        "operationId": "MasjidService_GetMasjid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/limestoneMasjid"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The id of the masjid that should be returned.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "masjids/[^/]+"
          }
        ],
        "tags": [
          "MasjidService"
        ]
      },
      "delete": {
        "summary": "Deletes a masjid from the database with the given id.",
        "operationId": "MasjidService_DeleteMasjid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/limestoneDeleteMasjidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The id of the masjid that should be deleted.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "masjids/[^/]+"
          }
        ],
        "tags": [
          "MasjidService"
        ]
      }
    },
    "/v1/{masjid.id}": {
      "patch": {
        "summary": "Updates a masjid in the database with the corresponding id to the given\nmasjid (i.e. all fields are overwritten).",
        "operationId": "MasjidService_UpdateMasjid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/limestoneMasjid"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "masjid.id",
            "description": "The unique id of the masjid. This field is output only.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "masjids/[^/]+"
          },
          {
            "name": "masjid",
            "description": "The masjid to update in the database.\n\nThe masjid's `id` field is used to identify the book to update.\nFormat: masjids/{masjid}",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the masjid."
                },
                "isVerified": {
                  "type": "boolean",
                  "description": "Whether or not the masjid has been verified."
                },
                "address": {
                  "$ref": "#/definitions/MasjidAddress",
                  "description": "The main address of the masjid."
                },
                "phoneNumber": {
                  "$ref": "#/definitions/MasjidPhoneNumber",
                  "description": "The main phone number to contact for the masjid."
                },
                "prayerConfig": {
                  "$ref": "#/definitions/limestonePrayerTimesConfiguration",
                  "description": "The configuration to calculate prayer times for the masjid."
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The create time of the Masjid. This field is output only."
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The update time of the Masjid. This field is output only."
                }
              },
              "description": "The masjid's `id` field is used to identify the book to update.\nFormat: masjids/{masjid}",
              "title": "The masjid to update in the database."
            }
          }
        ],
        "tags": [
          "MasjidService"
        ]
      }
    }
  },
  "definitions": {
    "MasjidAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "The street address of the masjid."
        },
        "addressLine2": {
          "type": "string",
          "description": "Additional address information for the masjid, such as suite number, floor, etc."
        },
        "zoneCode": {
          "type": "string",
          "description": "The code of the administrative divisions in a country.\nSee https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country.Address\nThis field is what should be used for things like states or provinces."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code of the masjid."
        },
        "city": {
          "type": "string",
          "description": "The city where the masjid is located."
        },
        "countryCode": {
          "type": "string",
          "description": "A valid ISO 3166-1 country code. The full list can be found here: https://www.iban.com/country-codes.\nConsider only the Alpha-2 code column."
        }
      },
      "title": "Defines a postal address for the masjid. This message can be used across countries.\nThe fields were inspired by this blog post: https://shopify.engineering/handling-addresses-from-all-around-the-world"
    },
    "MasjidPhoneNumber": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "The country code corresponding to the phone number.\nCountry codes are defined by ITU-T standards E.123 and E.164.\nSee https://en.wikipedia.org/wiki/List_of_country_calling_codes."
        },
        "number": {
          "type": "string",
          "description": "The phone number of the masjid."
        },
        "extension": {
          "type": "string",
          "description": "A extension for the number, if required."
        }
      },
      "description": "Defines the main phone number for the masjid."
    },
    "PrayerTimesConfigurationAsrJuristicMethod": {
      "type": "string",
      "enum": [
        "SHAFI_HANBALI_MALIKI",
        "HANAFI"
      ],
      "default": "SHAFI_HANBALI_MALIKI",
      "description": "The Juristic method to use for calculating Asr prayer times.\n\n - SHAFI_HANBALI_MALIKI: Use the Shafi/Hanbali/Maliki method to calculate Asr timings.\n - HANAFI: Use the Hanafi method to calculate Asr timings."
    },
    "PrayerTimesConfigurationCalculationMethod": {
      "type": "string",
      "enum": [
        "OTHER",
        "MUSLIM_WORLD_LEAGUE",
        "EGYPTIAN",
        "KARACHI",
        "UMM_AL_QURA",
        "DUBAI",
        "MOON_SIGHTING_COMMITTEE",
        "NORTH_AMERICA",
        "KUWAIT",
        "QATAR",
        "SINGAPORE",
        "UOIF"
      ],
      "default": "OTHER",
      "description": "Defines the calculation method to use. If this field is set (excluding OTHER), then the Fajr \nand Isha angle fields are automatically set.\n\n - OTHER: A custom calculation method.\n - MUSLIM_WORLD_LEAGUE: Muslim World League\nUses Fajr angle of 18 and an Isha angle of 17\n - EGYPTIAN: Egyptian General Authority of Survey\nUses Fajr angle of 19.5 and an Isha angle of 17.5\n - KARACHI: University of Islamic Sciences, Karachi\nUses Fajr angle of 18 and an Isha angle of 18\n - UMM_AL_QURA: Umm al-Qura University, Makkah\nUses a Fajr angle of 18.5 and an Isha angle of 90. Note: You should add a +30 minute custom\nadjustment of Isha during Ramadan.\n - DUBAI: The Gulf Region\nUses Fajr and Isha angles of 18.2 degrees.\n - MOON_SIGHTING_COMMITTEE: Moonsighting Committee\nUses a Fajr angle of 18 and an Isha angle of 18. Also uses seasonal adjustment values.\n - NORTH_AMERICA: Referred to as the ISNA method\nThis method is included for completeness, but is not recommended.\nUses a Fajr angle of 15 and an Isha angle of 15.\n - KUWAIT: Kuwait\nUses a Fajr angle of 18 and an Isha angle of 17.5\n - QATAR: Qatar\nModified version of Umm al-Qura that uses a Fajr angle of 18.\n - SINGAPORE: Singapore\nUses a Fajr angle of 20 and an Isha angle of 18\n - UOIF: UOIF\nUses a Fajr angle of 12 and an Isha angle of 12"
    },
    "PrayerTimesConfigurationHighLatitudeRule": {
      "type": "string",
      "enum": [
        "NO_HIGH_LATITUDE_RULE",
        "MIDDLE_OF_THE_NIGHT",
        "SEVENTH_OF_THE_NIGHT",
        "TWILIGHT_ANGLE"
      ],
      "default": "NO_HIGH_LATITUDE_RULE",
      "description": "The high latitude rule for calculating Fajr and Isha prayers.\n\n - MIDDLE_OF_THE_NIGHT: Fajr will never be earlier than the middle of the night, and Isha will never be later than\nthe middle of the night.\n - SEVENTH_OF_THE_NIGHT: Fajr will never be earlier than the beginning of the last seventh of the night, and Isha will\nnever be later than the end of the first seventh of the night.\n - TWILIGHT_ANGLE: Similar to SEVENTH_OF_THE_NIGHT, but instead of 1/7th, the fraction of the night used\nis fajr_angle / 60 and isha_angle / 60."
    },
    "PrayerTimesConfigurationPrayerAdjustments": {
      "type": "object",
      "properties": {
        "fajrAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Adjustment offset for Fajr in minutes. Value can be negative."
        },
        "dhuhrAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Adjustment offset for Dhuhr in minutes. Value can be negative."
        },
        "asrAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Adjustment offset for Asr in minutes. Value can be negative."
        },
        "maghribAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Adjustment offset for Maghrib in minutes. Value can be negative."
        },
        "ishaAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Adjustment offset for Isha in minutes. Value can be negative."
        }
      },
      "description": "The manual adjustments to apply to the prayer timings. The value that each field is set to is \nthe offset which will be added to the calculated time to obtain the final prayer time."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "limestoneDeleteMasjidResponse": {
      "type": "object"
    },
    "limestoneListMasjidsResponse": {
      "type": "object",
      "properties": {
        "masjids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/limestoneMasjid"
          },
          "description": "The list of returned masjids."
        }
      }
    },
    "limestoneMasjid": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of the masjid. This field is output only."
        },
        "name": {
          "type": "string",
          "description": "The name of the masjid."
        },
        "isVerified": {
          "type": "boolean",
          "description": "Whether or not the masjid has been verified."
        },
        "address": {
          "$ref": "#/definitions/MasjidAddress",
          "description": "The main address of the masjid."
        },
        "phoneNumber": {
          "$ref": "#/definitions/MasjidPhoneNumber",
          "description": "The main phone number to contact for the masjid."
        },
        "prayerConfig": {
          "$ref": "#/definitions/limestonePrayerTimesConfiguration",
          "description": "The configuration to calculate prayer times for the masjid."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The create time of the Masjid. This field is output only."
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The update time of the Masjid. This field is output only."
        }
      },
      "description": "Defines a proto representing the main data corresponding to a masjid.\nThis data includes the masjid name, address, phone number and prayer times configuration."
    },
    "limestonePrayerTimesConfiguration": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/PrayerTimesConfigurationCalculationMethod",
          "description": "The calculation method to use."
        },
        "fajrAngle": {
          "type": "number",
          "format": "double",
          "description": "The Fajr angle to use. This does not need to be set if the calculation method is set.\nIf both fields are set, then the calculation method field takes precedence."
        },
        "ishaAngle": {
          "type": "number",
          "format": "double",
          "description": "The Isha angle to use. This does not need to be set if the calculation method is set.\nIf both fields are set, then the calculation method field takes precedence."
        },
        "ishaInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Minutes after Maghrib (if set, the time for Isha will be Maghrib plus the Isha interval)."
        },
        "asrMethod": {
          "$ref": "#/definitions/PrayerTimesConfigurationAsrJuristicMethod",
          "description": "The juristic method to use for calculating Asr timings."
        },
        "highLatitudeRule": {
          "$ref": "#/definitions/PrayerTimesConfigurationHighLatitudeRule",
          "description": "The high latitude rule to use to calculate Fajr and Isha prayers."
        },
        "adjustments": {
          "$ref": "#/definitions/PrayerTimesConfigurationPrayerAdjustments",
          "description": "The prayer adjusments (aka offsets) to apply to the calculated prayer times."
        }
      },
      "description": "A message that holds prayer times configuration. This message contains all the fields\nnecessary to calculate prayer times."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  }
}
