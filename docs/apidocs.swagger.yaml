swagger: "2.0"
info:
  title: user_service.grpc
  version: version not set
tags:
  - name: UserService
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/authenticate:
    post:
      summary: Authenticates a user based on their username or email and password
      operationId: UserService_AuthenticateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneAuthenticateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/limestoneAuthenticateUserRequest'
      tags:
        - UserService
  /users/refresh_token:
    post:
      summary: Refreshes an existing authentication token
      operationId: UserService_RefreshToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneRefreshTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/limestoneRefreshTokenRequest'
      tags:
        - UserService
  /v1/users:
    post:
      summary: Creates the given User with the given password.
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user
          description: The user to create.
          in: body
          required: true
          schema:
            $ref: '#/definitions/limestoneUser'
            required:
              - user
        - name: password
          description: "The password for the user. This password is hashed before being\nstored in the database. \nThe password must be at least 8 characters."
          in: query
          required: true
          type: string
      tags:
        - UserService
  /v1/users/{id}:
    get:
      summary: Gets a User from the database and tokens provided the auth token is valid.
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneGetUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          description: The id of the user to get.
          in: path
          required: true
          type: string
      tags:
        - UserService
  /v1/{id}:
    delete:
      summary: Deletes a User from the database provided the auth token is valid.
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneDeleteUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          description: The id of the user to delete.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - UserService
  /v1/{user.id}:
    patch:
      summary: Updates a User to the given User in the request provided the auth token is valid.
      operationId: UserService_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/limestoneUser'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.id
          description: The ID of the user. This field is output only.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: user
          description: The updated user grpc.
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the user. This field is required and must be unique.
              username:
                type: string
                description: The username of the user. This field is required and must be unique.
              isEmailVerified:
                type: boolean
                description: Whether or not the email of the user was verified.
              firstName:
                type: string
                description: The first name of the user.
              lastName:
                type: string
                description: The last name of the user.
              phoneNumber:
                type: string
                description: The phone number associated with the user.
              gender:
                $ref: '#/definitions/UserGender'
              createTime:
                type: string
                format: date-time
                description: The create time of the user. This field is output only.
              updateTime:
                type: string
                format: date-time
                description: The update time of the user. This field is output only.
            title: The updated user grpc.
      tags:
        - UserService
definitions:
  UserGender:
    type: string
    enum:
      - GENDER_UNSPECIFIED
      - MALE
      - FEMALE
    default: GENDER_UNSPECIFIED
    description: |-
      Defines an enum representing the gender of the user.

       - GENDER_UNSPECIFIED: Default value.
  limestoneAuthenticateUserRequest:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string
        title: The password for authentication
  limestoneAuthenticateUserResponse:
    type: object
    properties:
      accessToken:
        type: string
        description: The access token for subsequent authenticated requests.
      refreshToken:
        type: string
        description: The refresh token to obtain a new access token when it expires.
      userId:
        type: integer
        format: int32
        description: The ID of the authenticated user (if successful).
  limestoneDeleteUserResponse:
    type: object
    description: Empty response returned for DeleteUser RPC.
  limestoneGetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/limestoneUser'
        description: The authenticated user.
  limestoneRefreshTokenRequest:
    type: object
    properties:
      refreshToken:
        type: string
        description: The refresh JWT for the user.
  limestoneRefreshTokenResponse:
    type: object
    properties:
      accessToken:
        type: string
        description: The access token for subsequent authenticated requests.
      refreshToken:
        type: string
  limestoneUser:
    type: object
    properties:
      id:
        type: string
        description: The ID of the user. This field is output only.
      email:
        type: string
        description: The email of the user. This field is required and must be unique.
      username:
        type: string
        description: The username of the user. This field is required and must be unique.
      isEmailVerified:
        type: boolean
        description: Whether or not the email of the user was verified.
      firstName:
        type: string
        description: The first name of the user.
      lastName:
        type: string
        description: The last name of the user.
      phoneNumber:
        type: string
        description: The phone number associated with the user.
      gender:
        $ref: '#/definitions/UserGender'
      createTime:
        type: string
        format: date-time
        description: The create time of the user. This field is output only.
      updateTime:
        type: string
        format: date-time
        description: The update time of the user. This field is output only.
    description: Defines a User.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
