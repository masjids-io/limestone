// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: nikkah_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	NikkahIoService_CreateProfile_FullMethodName     = "/limestone.NikkahIoService/CreateProfile"
	NikkahIoService_GetSelfProfile_FullMethodName    = "/limestone.NikkahIoService/GetSelfProfile"
	NikkahIoService_UpdateSelfProfile_FullMethodName = "/limestone.NikkahIoService/UpdateSelfProfile"
	NikkahIoService_ListProfiles_FullMethodName      = "/limestone.NikkahIoService/ListProfiles"
	NikkahIoService_GetProfile_FullMethodName        = "/limestone.NikkahIoService/GetProfile"
)

// NikkahIoServiceClient is the client API for NikkahIoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NikkahIoServiceClient interface {
	// Creates a marriage profile for the authenticated user.
	CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	// Retrieves the profile of the authenticated user.
	GetSelfProfile(ctx context.Context, in *GetSelfProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	// Updates the profile of the authenticated user.
	UpdateSelfProfile(ctx context.Context, in *UpdateSelfProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	// Lists profiles based on specified criteria.
	ListProfiles(ctx context.Context, in *ListProfilesRequest, opts ...grpc.CallOption) (*ListProfilesResponse, error)
	// Gets the details of a specific profile.
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
}

type nikkahIoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNikkahIoServiceClient(cc grpc.ClientConnInterface) NikkahIoServiceClient {
	return &nikkahIoServiceClient{cc}
}

func (c *nikkahIoServiceClient) CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, NikkahIoService_CreateProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetSelfProfile(ctx context.Context, in *GetSelfProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, NikkahIoService_GetSelfProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) UpdateSelfProfile(ctx context.Context, in *UpdateSelfProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, NikkahIoService_UpdateSelfProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) ListProfiles(ctx context.Context, in *ListProfilesRequest, opts ...grpc.CallOption) (*ListProfilesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListProfilesResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_ListProfiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, NikkahIoService_GetProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NikkahIoServiceServer is the server API for NikkahIoService service.
// All implementations must embed UnimplementedNikkahIoServiceServer
// for forward compatibility.
type NikkahIoServiceServer interface {
	// Creates a marriage profile for the authenticated user.
	CreateProfile(context.Context, *CreateProfileRequest) (*Profile, error)
	// Retrieves the profile of the authenticated user.
	GetSelfProfile(context.Context, *GetSelfProfileRequest) (*Profile, error)
	// Updates the profile of the authenticated user.
	UpdateSelfProfile(context.Context, *UpdateSelfProfileRequest) (*Profile, error)
	// Lists profiles based on specified criteria.
	ListProfiles(context.Context, *ListProfilesRequest) (*ListProfilesResponse, error)
	// Gets the details of a specific profile.
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	mustEmbedUnimplementedNikkahIoServiceServer()
}

// UnimplementedNikkahIoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedNikkahIoServiceServer struct{}

func (UnimplementedNikkahIoServiceServer) CreateProfile(context.Context, *CreateProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetSelfProfile(context.Context, *GetSelfProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) UpdateSelfProfile(context.Context, *UpdateSelfProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSelfProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) ListProfiles(context.Context, *ListProfilesRequest) (*ListProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProfiles not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetProfile(context.Context, *GetProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) mustEmbedUnimplementedNikkahIoServiceServer() {}
func (UnimplementedNikkahIoServiceServer) testEmbeddedByValue()                         {}

// UnsafeNikkahIoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NikkahIoServiceServer will
// result in compilation errors.
type UnsafeNikkahIoServiceServer interface {
	mustEmbedUnimplementedNikkahIoServiceServer()
}

func RegisterNikkahIoServiceServer(s grpc.ServiceRegistrar, srv NikkahIoServiceServer) {
	// If the following call pancis, it indicates UnimplementedNikkahIoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&NikkahIoService_ServiceDesc, srv)
}

func _NikkahIoService_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_CreateProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).CreateProfile(ctx, req.(*CreateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetSelfProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSelfProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetSelfProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetSelfProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetSelfProfile(ctx, req.(*GetSelfProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_UpdateSelfProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSelfProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).UpdateSelfProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_UpdateSelfProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).UpdateSelfProfile(ctx, req.(*UpdateSelfProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_ListProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).ListProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_ListProfiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).ListProfiles(ctx, req.(*ListProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NikkahIoService_ServiceDesc is the grpc.ServiceDesc for NikkahIoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NikkahIoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "limestone.NikkahIoService",
	HandlerType: (*NikkahIoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProfile",
			Handler:    _NikkahIoService_CreateProfile_Handler,
		},
		{
			MethodName: "GetSelfProfile",
			Handler:    _NikkahIoService_GetSelfProfile_Handler,
		},
		{
			MethodName: "UpdateSelfProfile",
			Handler:    _NikkahIoService_UpdateSelfProfile_Handler,
		},
		{
			MethodName: "ListProfiles",
			Handler:    _NikkahIoService_ListProfiles_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _NikkahIoService_GetProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nikkah_service.proto",
}
