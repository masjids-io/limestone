// Copyright (c) 2024 Coding-af Limestone Dev
// Licensed under the MIT License.
// file COPYING or http://www.opensource.org/licenses/mit-license.php

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: revert_service.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	RevertsIoService_CreateRevertProfile_FullMethodName     = "/limestone.RevertsIoService/CreateRevertProfile"
	RevertsIoService_GetSelfRevertProfile_FullMethodName    = "/limestone.RevertsIoService/GetSelfRevertProfile"
	RevertsIoService_UpdateSelfRevertProfile_FullMethodName = "/limestone.RevertsIoService/UpdateSelfRevertProfile"
	RevertsIoService_ListRevertProfiles_FullMethodName      = "/limestone.RevertsIoService/ListRevertProfiles"
	RevertsIoService_GetRevertProfile_FullMethodName        = "/limestone.RevertsIoService/GetRevertProfile"
	RevertsIoService_CreateRevertMatchInvite_FullMethodName = "/limestone.RevertsIoService/CreateRevertMatchInvite"
	RevertsIoService_GetRevertMatch_FullMethodName          = "/limestone.RevertsIoService/GetRevertMatch"
	RevertsIoService_AcceptRevertMatchInvite_FullMethodName = "/limestone.RevertsIoService/AcceptRevertMatchInvite"
	RevertsIoService_RejectRevertMatchInvite_FullMethodName = "/limestone.RevertsIoService/RejectRevertMatchInvite"
	RevertsIoService_EndRevertMatch_FullMethodName          = "/limestone.RevertsIoService/EndRevertMatch"
)

// RevertsIoServiceClient is the client API for RevertsIoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RevertsIoServiceClient interface {
	CreateRevertProfile(ctx context.Context, in *CreateRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	GetSelfRevertProfile(ctx context.Context, in *GetSelfRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	UpdateSelfRevertProfile(ctx context.Context, in *UpdateSelfRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	ListRevertProfiles(ctx context.Context, in *ListRevertProfilesRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	GetRevertProfile(ctx context.Context, in *GetRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	CreateRevertMatchInvite(ctx context.Context, in *CreateRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	GetRevertMatch(ctx context.Context, in *GetRevertMatchRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	AcceptRevertMatchInvite(ctx context.Context, in *AcceptRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	RejectRevertMatchInvite(ctx context.Context, in *RejectRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
	EndRevertMatch(ctx context.Context, in *EndRevertMatchRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error)
}

type revertsIoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRevertsIoServiceClient(cc grpc.ClientConnInterface) RevertsIoServiceClient {
	return &revertsIoServiceClient{cc}
}

func (c *revertsIoServiceClient) CreateRevertProfile(ctx context.Context, in *CreateRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_CreateRevertProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) GetSelfRevertProfile(ctx context.Context, in *GetSelfRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_GetSelfRevertProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) UpdateSelfRevertProfile(ctx context.Context, in *UpdateSelfRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_UpdateSelfRevertProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) ListRevertProfiles(ctx context.Context, in *ListRevertProfilesRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_ListRevertProfiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) GetRevertProfile(ctx context.Context, in *GetRevertProfileRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_GetRevertProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) CreateRevertMatchInvite(ctx context.Context, in *CreateRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_CreateRevertMatchInvite_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) GetRevertMatch(ctx context.Context, in *GetRevertMatchRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_GetRevertMatch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) AcceptRevertMatchInvite(ctx context.Context, in *AcceptRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_AcceptRevertMatchInvite_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) RejectRevertMatchInvite(ctx context.Context, in *RejectRevertMatchInviteRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_RejectRevertMatchInvite_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *revertsIoServiceClient) EndRevertMatch(ctx context.Context, in *EndRevertMatchRequest, opts ...grpc.CallOption) (*StandardRevertResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardRevertResponse)
	err := c.cc.Invoke(ctx, RevertsIoService_EndRevertMatch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RevertsIoServiceServer is the server API for RevertsIoService service.
// All implementations must embed UnimplementedRevertsIoServiceServer
// for forward compatibility.
type RevertsIoServiceServer interface {
	CreateRevertProfile(context.Context, *CreateRevertProfileRequest) (*StandardRevertResponse, error)
	GetSelfRevertProfile(context.Context, *GetSelfRevertProfileRequest) (*StandardRevertResponse, error)
	UpdateSelfRevertProfile(context.Context, *UpdateSelfRevertProfileRequest) (*StandardRevertResponse, error)
	ListRevertProfiles(context.Context, *ListRevertProfilesRequest) (*StandardRevertResponse, error)
	GetRevertProfile(context.Context, *GetRevertProfileRequest) (*StandardRevertResponse, error)
	CreateRevertMatchInvite(context.Context, *CreateRevertMatchInviteRequest) (*StandardRevertResponse, error)
	GetRevertMatch(context.Context, *GetRevertMatchRequest) (*StandardRevertResponse, error)
	AcceptRevertMatchInvite(context.Context, *AcceptRevertMatchInviteRequest) (*StandardRevertResponse, error)
	RejectRevertMatchInvite(context.Context, *RejectRevertMatchInviteRequest) (*StandardRevertResponse, error)
	EndRevertMatch(context.Context, *EndRevertMatchRequest) (*StandardRevertResponse, error)
	mustEmbedUnimplementedRevertsIoServiceServer()
}

// UnimplementedRevertsIoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedRevertsIoServiceServer struct{}

func (UnimplementedRevertsIoServiceServer) CreateRevertProfile(context.Context, *CreateRevertProfileRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRevertProfile not implemented")
}
func (UnimplementedRevertsIoServiceServer) GetSelfRevertProfile(context.Context, *GetSelfRevertProfileRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfRevertProfile not implemented")
}
func (UnimplementedRevertsIoServiceServer) UpdateSelfRevertProfile(context.Context, *UpdateSelfRevertProfileRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSelfRevertProfile not implemented")
}
func (UnimplementedRevertsIoServiceServer) ListRevertProfiles(context.Context, *ListRevertProfilesRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRevertProfiles not implemented")
}
func (UnimplementedRevertsIoServiceServer) GetRevertProfile(context.Context, *GetRevertProfileRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRevertProfile not implemented")
}
func (UnimplementedRevertsIoServiceServer) CreateRevertMatchInvite(context.Context, *CreateRevertMatchInviteRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRevertMatchInvite not implemented")
}
func (UnimplementedRevertsIoServiceServer) GetRevertMatch(context.Context, *GetRevertMatchRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRevertMatch not implemented")
}
func (UnimplementedRevertsIoServiceServer) AcceptRevertMatchInvite(context.Context, *AcceptRevertMatchInviteRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptRevertMatchInvite not implemented")
}
func (UnimplementedRevertsIoServiceServer) RejectRevertMatchInvite(context.Context, *RejectRevertMatchInviteRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectRevertMatchInvite not implemented")
}
func (UnimplementedRevertsIoServiceServer) EndRevertMatch(context.Context, *EndRevertMatchRequest) (*StandardRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndRevertMatch not implemented")
}
func (UnimplementedRevertsIoServiceServer) mustEmbedUnimplementedRevertsIoServiceServer() {}
func (UnimplementedRevertsIoServiceServer) testEmbeddedByValue()                          {}

// UnsafeRevertsIoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RevertsIoServiceServer will
// result in compilation errors.
type UnsafeRevertsIoServiceServer interface {
	mustEmbedUnimplementedRevertsIoServiceServer()
}

func RegisterRevertsIoServiceServer(s grpc.ServiceRegistrar, srv RevertsIoServiceServer) {
	// If the following call pancis, it indicates UnimplementedRevertsIoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&RevertsIoService_ServiceDesc, srv)
}

func _RevertsIoService_CreateRevertProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRevertProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).CreateRevertProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_CreateRevertProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).CreateRevertProfile(ctx, req.(*CreateRevertProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_GetSelfRevertProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSelfRevertProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).GetSelfRevertProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_GetSelfRevertProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).GetSelfRevertProfile(ctx, req.(*GetSelfRevertProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_UpdateSelfRevertProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSelfRevertProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).UpdateSelfRevertProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_UpdateSelfRevertProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).UpdateSelfRevertProfile(ctx, req.(*UpdateSelfRevertProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_ListRevertProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRevertProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).ListRevertProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_ListRevertProfiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).ListRevertProfiles(ctx, req.(*ListRevertProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_GetRevertProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRevertProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).GetRevertProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_GetRevertProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).GetRevertProfile(ctx, req.(*GetRevertProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_CreateRevertMatchInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRevertMatchInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).CreateRevertMatchInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_CreateRevertMatchInvite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).CreateRevertMatchInvite(ctx, req.(*CreateRevertMatchInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_GetRevertMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRevertMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).GetRevertMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_GetRevertMatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).GetRevertMatch(ctx, req.(*GetRevertMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_AcceptRevertMatchInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptRevertMatchInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).AcceptRevertMatchInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_AcceptRevertMatchInvite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).AcceptRevertMatchInvite(ctx, req.(*AcceptRevertMatchInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_RejectRevertMatchInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RejectRevertMatchInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).RejectRevertMatchInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_RejectRevertMatchInvite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).RejectRevertMatchInvite(ctx, req.(*RejectRevertMatchInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RevertsIoService_EndRevertMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndRevertMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevertsIoServiceServer).EndRevertMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RevertsIoService_EndRevertMatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevertsIoServiceServer).EndRevertMatch(ctx, req.(*EndRevertMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RevertsIoService_ServiceDesc is the grpc.ServiceDesc for RevertsIoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RevertsIoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "limestone.RevertsIoService",
	HandlerType: (*RevertsIoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRevertProfile",
			Handler:    _RevertsIoService_CreateRevertProfile_Handler,
		},
		{
			MethodName: "GetSelfRevertProfile",
			Handler:    _RevertsIoService_GetSelfRevertProfile_Handler,
		},
		{
			MethodName: "UpdateSelfRevertProfile",
			Handler:    _RevertsIoService_UpdateSelfRevertProfile_Handler,
		},
		{
			MethodName: "ListRevertProfiles",
			Handler:    _RevertsIoService_ListRevertProfiles_Handler,
		},
		{
			MethodName: "GetRevertProfile",
			Handler:    _RevertsIoService_GetRevertProfile_Handler,
		},
		{
			MethodName: "CreateRevertMatchInvite",
			Handler:    _RevertsIoService_CreateRevertMatchInvite_Handler,
		},
		{
			MethodName: "GetRevertMatch",
			Handler:    _RevertsIoService_GetRevertMatch_Handler,
		},
		{
			MethodName: "AcceptRevertMatchInvite",
			Handler:    _RevertsIoService_AcceptRevertMatchInvite_Handler,
		},
		{
			MethodName: "RejectRevertMatchInvite",
			Handler:    _RevertsIoService_RejectRevertMatchInvite_Handler,
		},
		{
			MethodName: "EndRevertMatch",
			Handler:    _RevertsIoService_EndRevertMatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "revert_service.proto",
}
