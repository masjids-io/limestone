// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: nikkah_service.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	NikkahIoService_CreateNikkahProfile_FullMethodName     = "/limestone.NikkahIoService/CreateNikkahProfile"
	NikkahIoService_GetSelfNikkahProfile_FullMethodName    = "/limestone.NikkahIoService/GetSelfNikkahProfile"
	NikkahIoService_UpdateSelfNikkahProfile_FullMethodName = "/limestone.NikkahIoService/UpdateSelfNikkahProfile"
	NikkahIoService_ListNikkahProfiles_FullMethodName      = "/limestone.NikkahIoService/ListNikkahProfiles"
	NikkahIoService_GetNikkahProfile_FullMethodName        = "/limestone.NikkahIoService/GetNikkahProfile"
	NikkahIoService_InitiateNikkahLike_FullMethodName      = "/limestone.NikkahIoService/InitiateNikkahLike"
	NikkahIoService_GetNikkahLike_FullMethodName           = "/limestone.NikkahIoService/GetNikkahLike"
	NikkahIoService_CancelNikkahLike_FullMethodName        = "/limestone.NikkahIoService/CancelNikkahLike"
	NikkahIoService_CompleteNikkahLike_FullMethodName      = "/limestone.NikkahIoService/CompleteNikkahLike"
	NikkahIoService_AcceptNikkahMatchInvite_FullMethodName = "/limestone.NikkahIoService/AcceptNikkahMatchInvite"
	NikkahIoService_GetNikkahMatch_FullMethodName          = "/limestone.NikkahIoService/GetNikkahMatch"
	NikkahIoService_RejectNikkahMatchInvite_FullMethodName = "/limestone.NikkahIoService/RejectNikkahMatchInvite"
	NikkahIoService_EndNikkahMatch_FullMethodName          = "/limestone.NikkahIoService/EndNikkahMatch"
)

// NikkahIoServiceClient is the client API for NikkahIoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NikkahIoServiceClient interface {
	CreateNikkahProfile(ctx context.Context, in *CreateNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	GetSelfNikkahProfile(ctx context.Context, in *GetSelfNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	UpdateSelfNikkahProfile(ctx context.Context, in *UpdateSelfNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	ListNikkahProfiles(ctx context.Context, in *ListNikkahProfilesRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	GetNikkahProfile(ctx context.Context, in *GetNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	InitiateNikkahLike(ctx context.Context, in *InitiateNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	GetNikkahLike(ctx context.Context, in *GetNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	CancelNikkahLike(ctx context.Context, in *CancelNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	CompleteNikkahLike(ctx context.Context, in *CompleteNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	AcceptNikkahMatchInvite(ctx context.Context, in *AcceptNikkahMatchInviteRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	GetNikkahMatch(ctx context.Context, in *GetNikkahMatchRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	RejectNikkahMatchInvite(ctx context.Context, in *RejectNikkahMatchInviteRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
	EndNikkahMatch(ctx context.Context, in *EndNikkahMatchRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error)
}

type nikkahIoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNikkahIoServiceClient(cc grpc.ClientConnInterface) NikkahIoServiceClient {
	return &nikkahIoServiceClient{cc}
}

func (c *nikkahIoServiceClient) CreateNikkahProfile(ctx context.Context, in *CreateNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_CreateNikkahProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetSelfNikkahProfile(ctx context.Context, in *GetSelfNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_GetSelfNikkahProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) UpdateSelfNikkahProfile(ctx context.Context, in *UpdateSelfNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_UpdateSelfNikkahProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) ListNikkahProfiles(ctx context.Context, in *ListNikkahProfilesRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_ListNikkahProfiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetNikkahProfile(ctx context.Context, in *GetNikkahProfileRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_GetNikkahProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) InitiateNikkahLike(ctx context.Context, in *InitiateNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_InitiateNikkahLike_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetNikkahLike(ctx context.Context, in *GetNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_GetNikkahLike_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) CancelNikkahLike(ctx context.Context, in *CancelNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_CancelNikkahLike_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) CompleteNikkahLike(ctx context.Context, in *CompleteNikkahLikeRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_CompleteNikkahLike_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) AcceptNikkahMatchInvite(ctx context.Context, in *AcceptNikkahMatchInviteRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_AcceptNikkahMatchInvite_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) GetNikkahMatch(ctx context.Context, in *GetNikkahMatchRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_GetNikkahMatch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) RejectNikkahMatchInvite(ctx context.Context, in *RejectNikkahMatchInviteRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_RejectNikkahMatchInvite_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nikkahIoServiceClient) EndNikkahMatch(ctx context.Context, in *EndNikkahMatchRequest, opts ...grpc.CallOption) (*StandardNikkahResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardNikkahResponse)
	err := c.cc.Invoke(ctx, NikkahIoService_EndNikkahMatch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NikkahIoServiceServer is the server API for NikkahIoService service.
// All implementations must embed UnimplementedNikkahIoServiceServer
// for forward compatibility.
type NikkahIoServiceServer interface {
	CreateNikkahProfile(context.Context, *CreateNikkahProfileRequest) (*StandardNikkahResponse, error)
	GetSelfNikkahProfile(context.Context, *GetSelfNikkahProfileRequest) (*StandardNikkahResponse, error)
	UpdateSelfNikkahProfile(context.Context, *UpdateSelfNikkahProfileRequest) (*StandardNikkahResponse, error)
	ListNikkahProfiles(context.Context, *ListNikkahProfilesRequest) (*StandardNikkahResponse, error)
	GetNikkahProfile(context.Context, *GetNikkahProfileRequest) (*StandardNikkahResponse, error)
	InitiateNikkahLike(context.Context, *InitiateNikkahLikeRequest) (*StandardNikkahResponse, error)
	GetNikkahLike(context.Context, *GetNikkahLikeRequest) (*StandardNikkahResponse, error)
	CancelNikkahLike(context.Context, *CancelNikkahLikeRequest) (*StandardNikkahResponse, error)
	CompleteNikkahLike(context.Context, *CompleteNikkahLikeRequest) (*StandardNikkahResponse, error)
	AcceptNikkahMatchInvite(context.Context, *AcceptNikkahMatchInviteRequest) (*StandardNikkahResponse, error)
	GetNikkahMatch(context.Context, *GetNikkahMatchRequest) (*StandardNikkahResponse, error)
	RejectNikkahMatchInvite(context.Context, *RejectNikkahMatchInviteRequest) (*StandardNikkahResponse, error)
	EndNikkahMatch(context.Context, *EndNikkahMatchRequest) (*StandardNikkahResponse, error)
	mustEmbedUnimplementedNikkahIoServiceServer()
}

// UnimplementedNikkahIoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedNikkahIoServiceServer struct{}

func (UnimplementedNikkahIoServiceServer) CreateNikkahProfile(context.Context, *CreateNikkahProfileRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNikkahProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetSelfNikkahProfile(context.Context, *GetSelfNikkahProfileRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfNikkahProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) UpdateSelfNikkahProfile(context.Context, *UpdateSelfNikkahProfileRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSelfNikkahProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) ListNikkahProfiles(context.Context, *ListNikkahProfilesRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNikkahProfiles not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetNikkahProfile(context.Context, *GetNikkahProfileRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNikkahProfile not implemented")
}
func (UnimplementedNikkahIoServiceServer) InitiateNikkahLike(context.Context, *InitiateNikkahLikeRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitiateNikkahLike not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetNikkahLike(context.Context, *GetNikkahLikeRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNikkahLike not implemented")
}
func (UnimplementedNikkahIoServiceServer) CancelNikkahLike(context.Context, *CancelNikkahLikeRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelNikkahLike not implemented")
}
func (UnimplementedNikkahIoServiceServer) CompleteNikkahLike(context.Context, *CompleteNikkahLikeRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteNikkahLike not implemented")
}
func (UnimplementedNikkahIoServiceServer) AcceptNikkahMatchInvite(context.Context, *AcceptNikkahMatchInviteRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptNikkahMatchInvite not implemented")
}
func (UnimplementedNikkahIoServiceServer) GetNikkahMatch(context.Context, *GetNikkahMatchRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNikkahMatch not implemented")
}
func (UnimplementedNikkahIoServiceServer) RejectNikkahMatchInvite(context.Context, *RejectNikkahMatchInviteRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectNikkahMatchInvite not implemented")
}
func (UnimplementedNikkahIoServiceServer) EndNikkahMatch(context.Context, *EndNikkahMatchRequest) (*StandardNikkahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndNikkahMatch not implemented")
}
func (UnimplementedNikkahIoServiceServer) mustEmbedUnimplementedNikkahIoServiceServer() {}
func (UnimplementedNikkahIoServiceServer) testEmbeddedByValue()                         {}

// UnsafeNikkahIoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NikkahIoServiceServer will
// result in compilation errors.
type UnsafeNikkahIoServiceServer interface {
	mustEmbedUnimplementedNikkahIoServiceServer()
}

func RegisterNikkahIoServiceServer(s grpc.ServiceRegistrar, srv NikkahIoServiceServer) {
	// If the following call pancis, it indicates UnimplementedNikkahIoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&NikkahIoService_ServiceDesc, srv)
}

func _NikkahIoService_CreateNikkahProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNikkahProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).CreateNikkahProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_CreateNikkahProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).CreateNikkahProfile(ctx, req.(*CreateNikkahProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetSelfNikkahProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSelfNikkahProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetSelfNikkahProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetSelfNikkahProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetSelfNikkahProfile(ctx, req.(*GetSelfNikkahProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_UpdateSelfNikkahProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSelfNikkahProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).UpdateSelfNikkahProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_UpdateSelfNikkahProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).UpdateSelfNikkahProfile(ctx, req.(*UpdateSelfNikkahProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_ListNikkahProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNikkahProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).ListNikkahProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_ListNikkahProfiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).ListNikkahProfiles(ctx, req.(*ListNikkahProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetNikkahProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNikkahProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetNikkahProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetNikkahProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetNikkahProfile(ctx, req.(*GetNikkahProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_InitiateNikkahLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitiateNikkahLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).InitiateNikkahLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_InitiateNikkahLike_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).InitiateNikkahLike(ctx, req.(*InitiateNikkahLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetNikkahLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNikkahLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetNikkahLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetNikkahLike_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetNikkahLike(ctx, req.(*GetNikkahLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_CancelNikkahLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelNikkahLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).CancelNikkahLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_CancelNikkahLike_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).CancelNikkahLike(ctx, req.(*CancelNikkahLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_CompleteNikkahLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteNikkahLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).CompleteNikkahLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_CompleteNikkahLike_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).CompleteNikkahLike(ctx, req.(*CompleteNikkahLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_AcceptNikkahMatchInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptNikkahMatchInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).AcceptNikkahMatchInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_AcceptNikkahMatchInvite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).AcceptNikkahMatchInvite(ctx, req.(*AcceptNikkahMatchInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_GetNikkahMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNikkahMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).GetNikkahMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_GetNikkahMatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).GetNikkahMatch(ctx, req.(*GetNikkahMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_RejectNikkahMatchInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RejectNikkahMatchInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).RejectNikkahMatchInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_RejectNikkahMatchInvite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).RejectNikkahMatchInvite(ctx, req.(*RejectNikkahMatchInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NikkahIoService_EndNikkahMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndNikkahMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NikkahIoServiceServer).EndNikkahMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NikkahIoService_EndNikkahMatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NikkahIoServiceServer).EndNikkahMatch(ctx, req.(*EndNikkahMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NikkahIoService_ServiceDesc is the grpc.ServiceDesc for NikkahIoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NikkahIoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "limestone.NikkahIoService",
	HandlerType: (*NikkahIoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNikkahProfile",
			Handler:    _NikkahIoService_CreateNikkahProfile_Handler,
		},
		{
			MethodName: "GetSelfNikkahProfile",
			Handler:    _NikkahIoService_GetSelfNikkahProfile_Handler,
		},
		{
			MethodName: "UpdateSelfNikkahProfile",
			Handler:    _NikkahIoService_UpdateSelfNikkahProfile_Handler,
		},
		{
			MethodName: "ListNikkahProfiles",
			Handler:    _NikkahIoService_ListNikkahProfiles_Handler,
		},
		{
			MethodName: "GetNikkahProfile",
			Handler:    _NikkahIoService_GetNikkahProfile_Handler,
		},
		{
			MethodName: "InitiateNikkahLike",
			Handler:    _NikkahIoService_InitiateNikkahLike_Handler,
		},
		{
			MethodName: "GetNikkahLike",
			Handler:    _NikkahIoService_GetNikkahLike_Handler,
		},
		{
			MethodName: "CancelNikkahLike",
			Handler:    _NikkahIoService_CancelNikkahLike_Handler,
		},
		{
			MethodName: "CompleteNikkahLike",
			Handler:    _NikkahIoService_CompleteNikkahLike_Handler,
		},
		{
			MethodName: "AcceptNikkahMatchInvite",
			Handler:    _NikkahIoService_AcceptNikkahMatchInvite_Handler,
		},
		{
			MethodName: "GetNikkahMatch",
			Handler:    _NikkahIoService_GetNikkahMatch_Handler,
		},
		{
			MethodName: "RejectNikkahMatchInvite",
			Handler:    _NikkahIoService_RejectNikkahMatchInvite_Handler,
		},
		{
			MethodName: "EndNikkahMatch",
			Handler:    _NikkahIoService_EndNikkahMatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nikkah_service.proto",
}
