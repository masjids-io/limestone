name: CI/CD for limestone services

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  GO_VERSION: '1.23'
  APP_NAME: limestone
  DOCKER_IMAGE_NAME: your-go-api
  DIGITALOCEAN_REGISTRY: registry.digitalocean.com/your-registry-name

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download Go modules
        run: go mod download

      - name: Run Go unit tests
        run: go test -v ./test/user_repository_test.go

#  build:
#    name: Build
#    needs: tests
#    runs-on: ubuntu-latest
#
#    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Log in to DigitalOcean Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.DIGITALOCEAN_REGISTRY }}
#          username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ env.DIGITALOCEAN_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
#            ${{ env.DIGITALOCEAN_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
#          build-args: |
#            GO_VERSION=${{ env.GO_VERSION }} # Meneruskan versi Go ke Dockerfile jika diperlukan
#
#  deploy:
#    name: Deploy
#    needs: build
#    runs-on: ubuntu-latest
#
#    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Deploy to DigitalOcean App Platform
#        uses: digitalocean/app_action@v2
#        with:
#          app_name: ${{ env.APP_NAME }}
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#          image: ${{ env.DIGITALOCEAN_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}